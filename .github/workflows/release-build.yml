name: Build and Publish APK

on:
  release:
    types: [created]
  workflow_dispatch:  # Allow manual triggering

# Add permissions needed for release management
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Make build script executable
        run: chmod +x ./build-app.sh ./gradlew

      - name: Build Release APK
        run: ./build-app.sh release

      - name: Find APK file
        id: find-apk
        run: |
          APK_PATH=$(find docker-build-output/apk/release -name "*.apk" | head -n 1)
          APK_NAME=$(basename "$APK_PATH")
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "apk_name=$APK_NAME" >> $GITHUB_OUTPUT
          echo "Found APK at: $APK_PATH"
          # Create a directory for artifacts if it doesn't exist
          mkdir -p ./artifacts
          # Copy the APK to the artifacts directory
          cp "$APK_PATH" ./artifacts/

      - name: Upload APK to Release
        if: github.event_name == 'release' && success() && steps.find-apk.outputs.apk_path != ''
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find-apk.outputs.apk_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK as Artifact
        if: success() && steps.find-apk.outputs.apk_path != ''
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ./artifacts
          retention-days: 14